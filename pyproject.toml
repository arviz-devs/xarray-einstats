[build-system]
requires = ["flit_core >=3.4,<4"]
build-backend = "flit_core.buildapi"

[project]
name = "xarray-einstats"
description = "Stats, linear algebra and einops for xarray"
readme = "README.md"
requires-python = ">=3.11"
license = {file = "LICENSE"}
authors = [
    {name = "ArviZ team", email = "arviz.devs@gmail.com"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3.14",
]
dynamic = ["version"]
dependencies = [
  "numpy>=1.25",
  "scipy>=1.11",
  "xarray>=2023.06.0",
]

[tool.flit.module]
name = "xarray_einstats"

[tool.setuptools.dynamic]
version = {attr = "xarray_einstats.__version__"}

[project.urls]
source = "https://github.com/arviz-devs/xarray-einstats"
tracker = "https://github.com/arviz-devs/xarray-einstats/issues"
documentation = "https://xarray-einstats.readthedocs.io"
funding = "https://opencollective.com/arviz"

[project.optional-dependencies]
einops = [ "einops" ]
numba = [ "numba>=0.55" ]
test = [
    "hypothesis",
    "pytest",
    "pytest-cov",
    "packaging",
    "scipy>=1.15",
    "preliz>=0.19",
]
doc = [
    "furo",
    "myst-parser[linkify]",
    "myst-nb",
    "sphinx-copybutton",
    "numpydoc",
    "sphinx>=5",
    "jupyter-sphinx",
    "sphinx-design",
    "watermark",
    "matplotlib",
    "sphinx-togglebutton",
]

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
include_trailing_comma = true
use_parentheses = true
multi_line_output = 3
line_length = 100
skip = [
    "src/xarray_einstats/__init__.py"
]

[tool.pydocstyle]
convention = "numpy"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.coverage.run]
source = ["xarray_einstats"]
omit = ["tutorial.py"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover",

    # Don't complain about missing _attemp_default_dims in linalg
    "dims = _attempt_default_dims",
]

